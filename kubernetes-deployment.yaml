# ----- Config and Secrets -----
apiVersion: v1
kind: ConfigMap
metadata:
  name: workspace-env
data:
---
apiVersion: v1
kind: Secret
metadata:
  name: workspace-secrets
type: Opaque
data:
---
# ----- Supporting Infrastructure -----
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
    - host: webapp.example.com
      http:
        paths:
          - pathType: ImplementationSpecific
            path: "/*"
            backend:
              service:
                name: my-service-webapp
                port:
                  number: 80
    - host: database.example.com
      http:
        paths:
          - pathType: ImplementationSpecific
            path: "/*"
            backend:
              service:
                name: my-service-database
                port:
                  number: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
    - port: 2181
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: zookeeper
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:latest
          ports:
            - containerPort: 2181
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  ports:
    - port: 9092
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
    - port: 27017
  selector:
    app: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
            - targetPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: toBeDefined
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: toBeDefined
            - name: MONGODB_USER
              value: toBeDefined
            - name: MONGODB_PASSWORD
              value: toBeDefined
---
# ----- Internal Services -----
---
apiVersion: v1
kind: Service
metadata:
  name: database-service
spec:
  service-name: database-service
  containers:
    - name: webapp
      image: tripmonkey/database-service
      ports:
        - containerPort: 9095
      env:
        - name: GRPC_PORT
          value: 9095
        - name: MONGO_HOST
          value: mongodb://mongodb:27017
        - name: MONGO_DATABASE
          value: workspaces
        - name: MONGO_USER
          value: toBeDefined
        - name: MONGO_PASSWORD
          value: toBeDefined
---
apiVersion: v1
kind: Pod
metadata:
  name: workspace-service
spec:
  service-name: workspace-service
  containers:
    - name: webapp
      image: tripmonkey/workspace-service
      ports:
        - containerPort: 9095
      env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: kafka:9092
        - name: GRPC_PORT
          value: 9095
        - name: PATCH_PERSIST_HOST
          value: database-service:9095
        - name: WORKSPACE_FETCH_HOST
          value: database-service:9095
        - name: GOOGLE_KEY
          value: toBeDefined
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak_interface
spec:
  service-name: keycloak_interface
  containers:
    - name: webapp
      image: tripmonkey/keycloak_interface
      ports:
        - containerPort: 9523
---
apiVersion: v1
kind: Service
metadata:
  name: workspace_backup
spec:
  service-name: workspace_backup
  containers:
    - name: webapp
      image: tripmonkey/workspace_backup
      ports:
        - containerPort: 9523
---
# ----- Gateway Services -----
---
apiVersion: v1
kind: Pod
metadata:
  name: notifications-service
spec:
  service-name: notifications-service
  containers:
    - name: webapp
      image: tripmonkey/notification-service
      ports:
        - containerPort: 8080
          targetPort: 8080
      env:
        - name: SERVICE_PORT
          value: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: workspace-rest-interface
spec:
  service-name: workspace-rest-interface
  containers:
    - name: webapp
      image: tripmonkey/rest-service
      ports:
        - containerPort: 8080
          targetPort: 8080
      env:
        - name: SERVICE_PORT
          value: 8080
        - name: PATCH_APPLIER_HOST
          value: database-service:9095
        - name: WORKSPACE_REQUEST_HOST
          value: database-service:9095
---
apiVersion: v1
kind: Pod
metadata:
  name: trends-rest-interface
spec:
  service-name: trends-rest-interface
  containers:
    - name: webapp
      image: tripmonkey/trends-service
      ports:
        - containerPort: 8080
          targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: admin-panel
spec:
  service-name: admin-panel
  containers:
    - name: webapp
      image: tripmonkey/admin-panel
      ports:
        - containerPort: 47314
        - port: 47314
---
apiVersion: v1
kind: Pod
metadata:
  name: descriptor-service
spec:
  service-name: descriptor-service
  containers:
    - name: webapp
      image: tripmonkey/descriptor-service
      ports:
        - containerPort: 50051
          targetPort: 50051
          port: 50051
        - containerPort: 5002
          targetPort: 5002
          port: 5002
---
apiVersion: v1
kind: Pod
metadata:
  name: recomendations-service
spec:
  service-name: recomendations-service
  containers:
    - name: webapp
      image: tripmonkey/recomendations-service
      ports:
        - containerPort: 50051
          targetPort: 50051
          port: 50051
        - containerPort: 5002
          targetPort: 5002
          port: 5002
---